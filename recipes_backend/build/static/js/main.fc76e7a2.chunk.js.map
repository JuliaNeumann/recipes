{"version":3,"sources":["modules/recipes/IngredientFormRow.tsx","modules/recipes/PortionSelection.tsx","services/api.ts","modules/recipes/CreateRecipe.tsx","modules/main/Login.tsx","modules/main/NavItems.tsx","modules/recipes/RecipesOverview.tsx","modules/recipes/ShowRecipe.tsx","modules/recipes/ImportRecipe.tsx","modules/plans/PlansOverview.tsx","modules/plans/CreatePlan.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["withStyles","theme","createStyles","formRowFlex","marginBottom","display","ingredientAmount","maxWidth","marginRight","ingredientMain","flexGrow","ingredientUnit","classes","props","className","TextField","label","type","value","ingredient","amount","onChange","event","updateIngredient","index","parseInt","target","InputLabelProps","shrink","unit","name","wrapper","alignItems","paddingBottom","spacing","numField","Typography","component","InputProps","inputProps","min","portions","changeHandler","BASE_URL_AUTH","BASE_URL","_getAuthHeaders","localStorage","getItem","createRecipe","recipe","a","axios","post","ingredient_set","ingredients","headers","result","data","id","updateRecipe","put","getAllRecipes","get","getRecipe","importRecipe","scraper","url","params","deleteRecipe","window","confirm","delete","getAllPlans","updateMealDone","meal","done","createPlan","plan","meal_set","deletePlan","login","email","password","key","undefined","console","error","logout","formRow","ingredientsList","addIngredient","alignSelf","withRouter","history","useState","title","setTitle","setUrl","description","setDescription","num_portions","setPortions","setIngredients","useEffect","map","newIngredients","slice","submitHandler","preventDefault","confirmed","isNaN","alert","push","noValidate","onSubmit","gutterBottom","variant","fullWidth","IconButton","color","onClick","rows","multiline","Button","form","margin","section","setEmail","setPassword","showPassword","setShowPassword","errors","setErrors","loading","setLoading","token","clear","setItem","location","reload","elevation","severity","FormGroup","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","position","aria-label","curr","onMouseDown","Visibility","VisibilityOff","NavItems","currentPath","useLocation","pathname","pages","route","icon","page","ListItem","Link","to","selected","button","ListItemIcon","ListItemText","primary","unconfirmed_icon","fontSize","marginLeft","recipes","setRecipes","getRecipes","length","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","RouterLink","block","textBlock","whiteSpace","match","setRecipe","showSnackbar","setShowSnackbar","getRecipeById","getAmountForPortions","handleDelete","handleConfirm","updatedRecipe","href","size","sort","b","Snackbar","open","autoHideDuration","onClose","message","setScraper","importDone","setImportDone","FormLabel","RadioGroup","FormControlLabel","control","Radio","root","width","summary","backgroundColor","palette","light","contrastText","details","recipe_done","textDecoration","delete_button","right","bottom","plans","setPlans","React","expanded","setExpanded","getPlans","handleDoneChange","checked","handleDeletePlan","Accordion","panel","isExpanded","AccordionSummary","focused","Date","created","toLocaleString","split","AccordionDetails","comment","paragraph","Checkbox","recipe_id","setComment","recipesChecked","setRecipesChecked","handleCheckboxChange","filter","recipeId","includes","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","setOpen","isAuth","setIsAuth","logoutHandler","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","Drawer","paper","Divider","List","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","main","secondary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2eA2DeA,eAtDA,SAACC,GAAD,OAAkBC,YAAa,CAC5CC,YAAa,CACXC,aAAc,GACdC,QAAS,QAEXC,iBAAkB,CAChBC,SAAU,GACVC,YAAa,IAEfC,eAAgB,CACdC,SAAU,EACVF,YAAa,IAEfG,eAAgB,CACdJ,SAAU,IACVC,YAAa,QAuCFR,EA7BW,SAAC,GAAmD,IAAjDY,EAAgD,EAAhDA,QAAYC,EAAoC,2BAC3E,OACE,sBAAKC,UAAWF,EAAQT,YAAxB,UACE,cAACY,EAAA,EAAD,CACED,UAAWF,EAAQN,iBACnBU,MAAM,QACNC,KAAK,SACLC,MAAOL,EAAMM,WAAWC,OACxBC,SAAU,SAACC,GAAD,OAAWT,EAAMU,iBAAiBV,EAAMW,MAA7B,2BAAyCX,EAAMM,YAA/C,IAA2DC,OAAQK,SAASH,EAAMI,OAAOR,WAC9GS,gBAAiB,CACfC,QAAQ,KAGZ,cAACb,EAAA,EAAD,CACED,UAAWF,EAAQD,eACnBK,MAAM,UACNE,MAAOL,EAAMM,WAAWU,KACxBR,SAAU,SAACC,GAAD,OAAWT,EAAMU,iBAAiBV,EAAMW,MAA7B,2BAAyCX,EAAMM,YAA/C,IAA2DU,KAAMP,EAAMI,OAAOR,YAErG,cAACH,EAAA,EAAD,CACED,UAAWF,EAAQH,eACnBO,MAAM,QACNE,MAAOL,EAAMM,WAAWW,KACxBT,SAAU,SAACC,GAAD,OAAWT,EAAMU,iBAAiBV,EAAMW,MAA7B,2BAAyCX,EAAMM,YAA/C,IAA2DW,KAAMR,EAAMI,OAAOR,kBChB5FlB,eAjCA,SAACC,GAAD,OAAkBC,YAAa,CAC5C6B,QAAS,CACP1B,QAAS,OACT2B,WAAY,WACZC,cAAehC,EAAMiC,WAEvBC,SAAU,CACR5B,SAAU,GACVC,YAAaP,EAAMiC,eAyBRlC,EAhBU,SAAC,GAAgD,IAA/CY,EAA8C,EAA9CA,QAAYC,EAAkC,2BACvE,OACE,eAACuB,EAAA,EAAD,CAAYtB,UAAWF,EAAQmB,QAASM,UAAU,MAAlD,gCAEE,cAACtB,EAAA,EAAD,CACED,UAAWF,EAAQuB,SACnBlB,KAAK,SACLqB,WAAY,CAAEC,WAAY,CAAEC,IAAK,IACjCtB,MAAOL,EAAM4B,SACbpB,SAAUR,EAAM6B,gBAPpB,mB,iBCpBEC,EAAgB,8BAChBC,EAAW,4BAEXC,EAAkB,WACpB,MAAO,CAAC,cAAgB,SAAhB,OAA0BC,aAAaC,QAAQ,YAGpD,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,eAAAC,EAAA,sEACkBC,IAAMC,KAAN,UAAcR,EAAd,wCACdK,GADc,IAEjBI,eAAgBJ,EAAOK,cACxB,CAACC,QAASV,MAJV,cACGW,EADH,yBAMIA,EAAOC,KAAKC,IANhB,4C,sBASA,SAAeC,EAAtB,kC,4CAAO,WAA4BV,GAA5B,eAAAC,EAAA,sEACkBC,IAAMS,IAAN,UAAahB,EAAb,oBAAiCK,EAAOS,GAAxC,KAA+CT,EAAQ,CAACM,QAASV,MADnF,cACGW,EADH,oDAGQA,EAAOC,MAHf,IAGqBH,YAAaE,EAAOC,KAAKJ,kBAH9C,4C,sBAMA,SAAeQ,IAAtB,gC,8CAAO,4BAAAX,EAAA,sEACkBC,IAAMW,IAAN,UAAalB,EAAb,aAAkC,CAACW,QAASV,MAD9D,cACGW,EADH,yBAEIA,EAAOC,MAFX,4C,sBAKA,SAAeM,GAAtB,mC,8CAAO,WAAyBL,GAAzB,eAAAR,EAAA,sEACkBC,IAAMW,IAAN,UAAalB,EAAb,oBAAiCc,EAAjC,KAAwC,CAACH,QAASV,MADpE,cACGW,EADH,oDAEQA,EAAOC,MAFf,IAEqBH,YAAaE,EAAOC,KAAKJ,kBAF9C,4C,sBAKA,SAAeW,GAAtB,qC,8CAAO,WAA4BC,EAAmBC,GAA/C,eAAAhB,EAAA,sEACkBC,IAAMW,IAAN,UAAalB,EAAb,YAAiC,CAClDuB,OAAQ,CAACF,UAASC,OAClBX,QAASV,MAHV,cACGW,EADH,oDAMQA,EAAOC,MANf,IAMqBS,SANrB,4C,sBASA,SAAeE,GAAtB,mC,8CAAO,WAA4BV,GAA5B,SAAAR,EAAA,0DACCmB,OAAOC,QAAQ,sBADhB,gCAEOnB,IAAMoB,OAAN,UAAgB3B,EAAhB,oBAAoCc,EAApC,KAA2C,CAACH,QAASV,MAF5D,4C,sBAMA,SAAe2B,KAAtB,gC,8CAAO,4BAAAtB,EAAA,sEACkBC,IAAMW,IAAN,UAAalB,EAAb,WAAgC,CAACW,QAASV,MAD5D,cACGW,EADH,yBAEIA,EAAOC,MAFX,4C,sBAKA,SAAegB,GAAtB,qC,8CAAO,WAA8BC,EAAYC,GAA1C,SAAAzB,EAAA,6DACHwB,EAAKC,KAAOA,EADT,SAEGxB,IAAMS,IAAN,UAAahB,EAAb,kBAA+B8B,EAAKhB,GAApC,KAA2CgB,EAAM,CAACnB,QAASV,MAF9D,4C,sBAKA,SAAe+B,GAAtB,mC,8CAAO,WAA0BC,GAA1B,eAAA3B,EAAA,sEACkBC,IAAMC,KAAN,UAAcR,EAAd,sCAAqCiC,GAArC,IAA2CC,SAAU,KAAK,CAACvB,QAASV,MADtF,cACGW,EADH,yBAGIA,EAAOC,KAAKC,IAHhB,4C,sBAMA,SAAeqB,GAAtB,mC,8CAAO,WAA0BrB,GAA1B,SAAAR,EAAA,0DACCmB,OAAOC,QAAQ,oBADhB,gCAEOnB,IAAMoB,OAAN,UAAgB3B,EAAhB,kBAAkCc,EAAlC,KAAyC,CAACH,QAASV,MAF1D,4C,sBAMA,SAAemC,GAAtB,qC,8CAAO,WAAqBC,EAAeC,GAApC,eAAAhC,EAAA,+EAEsBC,IAAMC,KAAN,UAAcT,EAAd,gBAA2C,CAACsC,QAAOC,aAFzE,cAEO1B,EAFP,yBAGQA,EAAOC,KAAK0B,UAAOC,GAH3B,uCAKCC,QAAQC,MAAR,MALD,uBAMQF,GANR,0D,sBAUA,SAAeG,KAAtB,gC,8CAAO,sBAAArC,EAAA,+EAEOC,IAAMC,KAAN,UAAcT,EAAd,iBAA4C,GAAI,CAACY,QAASV,MAFjE,iCAGQ,GAHR,uCAKCwC,QAAQC,MAAR,MALD,mBAMQ,GANR,0D,sBC/DP,IA6HetF,gBA7HA,SAACC,GAAD,OAAkBC,YAAa,CAC5CsF,QAAS,CACPpF,aAAc,IAEhBkD,YAAa,CACXjD,QAAS,OACTD,aAAc,IAEhBqF,gBAAiB,CACf/E,SAAU,GAEZgF,cAAe,CACbC,UAAW,WACXvF,aAAc,QAgHHJ,CAAmB4F,aAvGb,SAAC,GAAuD,IAAD,UAApDhF,EAAoD,EAApDA,QAASiF,EAA2C,EAA3CA,QAAYhF,EAA+B,uCAChDiF,oBAAS,UAAAjF,EAAMoC,cAAN,eAAc8C,QAAS,IADgB,mBACnEA,EADmE,KAC5DC,EAD4D,OAEpDF,oBAAS,UAAAjF,EAAMoC,cAAN,eAAciB,MAAO,IAFsB,mBAEnEA,EAFmE,KAE9D+B,EAF8D,OAGpCH,oBAAS,UAAAjF,EAAMoC,cAAN,eAAciD,cAAe,IAHF,mBAGnEA,EAHmE,KAGtDC,EAHsD,OAI1CL,oBAAS,UAAAjF,EAAMyC,mBAAN,mBAAoB,UAApB,eAAwB8C,eAAgB,GAJP,mBAInE3D,EAJmE,KAIzD4D,EAJyD,OAKpCP,mBAAS,CAAC,CAAE1E,OAAQ,EAAGS,KAAM,GAAIC,KAAM,GAAIsE,aAAc,KALrB,mBAKnE9C,EALmE,KAKtDgD,EALsD,KAO1EC,qBAAU,WACJ1F,EAAMyC,aACRgD,EAAezF,EAAMyC,YAAYkD,KAAI,SAAArF,GAAU,sBAAUA,SAE1D,CAACN,EAAMyC,cAEV,IAAM/B,EAAmB,SAACC,EAAeL,GACvC,IAAMsF,EAAkCnD,EAAYoD,QACpDD,EAAejF,GAAf,eAA6BL,GAC7BmF,EAAeG,IAGXE,EAAa,uCAAG,WAAOrF,GAAP,iBAAA4B,EAAA,6DACpB5B,EAAMsF,iBACA3D,EAAoB,CACxB8C,MAAOA,EACP7B,IAAKA,EACLgC,YAAaA,EACb5C,YAAaA,EAAYkD,KAAI,SAACrF,GAE5B,OADAA,EAAWiF,aAAe3D,EACnBtB,KAET0F,WAAW,GAVO,SAaC7D,EAAaC,GAbd,OAadO,EAbc,OAcfsD,MAAMtD,KACTuD,MAAM,uBACNlB,EAAQmB,KAAR,iBAAuBxD,KAhBL,2CAAH,sDA2BnB,OACE,uBAAMyD,YAAU,EAACC,SAAUP,EAA3B,UACE,cAACvE,EAAA,EAAD,CAAY+E,cAAY,EAACC,QAAQ,KAAjC,0BAGA,cAACrG,EAAA,EAAD,CACED,UAAWF,EAAQ4E,QACnB9B,GAAG,QACH1C,MAAM,QACNqG,WAAS,EACTnG,MAAO6E,EACP1E,SAAU,SAACC,GAAD,OAAW0E,EAAS1E,EAAMI,OAAOR,UAE7C,cAACH,EAAA,EAAD,CACED,UAAWF,EAAQ4E,QACnB9B,GAAG,MACH1C,MAAM,iBACNqG,WAAS,EACTnG,MAAOgD,EACP7C,SAAU,SAACC,GAAD,OAAW2E,EAAO3E,EAAMI,OAAOR,UAE3C,cAAC,EAAD,CACEuB,SAAUA,EACVC,cAAe,SAACpB,GAAD,OAAW+E,EAAY5E,SAASH,EAAMI,OAAOR,WAE9D,sBAAKJ,UAAWF,EAAQ0C,YAAxB,UACE,qBAAKxC,UAAWF,EAAQ6E,gBAAxB,SACGnC,EAAYkD,KAAI,SAACrF,EAAYK,GAAb,OACf,cAAC,EAAD,CAA+BA,MAAOA,EAAOL,WAAYA,EAAYI,iBAAkBA,GAA/DC,QAG5B,cAAC8F,EAAA,EAAD,CACExG,UAAWF,EAAQ8E,cACnB6B,MAAM,YACNC,QAzCc,WACpBlB,EAAe,GAAD,mBACThD,GADS,CAEZ,CAAElC,OAAQ,EAAGS,KAAM,GAAIC,KAAM,GAAIsE,aAAc,OAmC7C,SAKE,cAAC,IAAD,SAGJ,cAACrF,EAAA,EAAD,CACED,UAAWF,EAAQ4E,QACnB9B,GAAG,cACH1C,MAAM,eACNyG,KAAM,GACNL,QAAQ,WACRM,WAAS,EACTL,WAAS,EACTnG,MAAOgF,EACP7E,SAAU,SAACC,GAAD,OAAW6E,EAAe7E,EAAMI,OAAOR,UAEnD,cAACyG,EAAA,EAAD,CAAQP,QAAQ,YAAYG,MAAM,UAAUtG,KAAK,SAAjD,8B,gFC/BSjB,gBAzFA,SAACC,GAAD,OAAkBC,YAAa,CAC1C0H,KAAM,CACFrH,SAAUN,EAAMiC,QAAQ,IACxB2F,OAAQ,UAEZC,QAAS,CACL1H,aAAcH,EAAMiC,QAAQ,QAmFrBlC,CAAmB4F,aA7EpB,SAAC,GAAoC,IAAnChF,EAAkC,EAAlCA,QAASiF,EAAyB,EAAzBA,QAAyB,EACpBC,mBAAS,IADW,mBACvCb,EADuC,KAChC8C,EADgC,OAEdjC,mBAAS,IAFK,mBAEvCZ,EAFuC,KAE7B8C,EAF6B,OAGNlC,oBAAS,GAHH,mBAGvCmC,EAHuC,KAGzBC,EAHyB,OAIlBpC,oBAAS,GAJS,mBAIvCqC,EAJuC,KAI/BC,EAJ+B,OAKhBtC,oBAAS,GALO,mBAKvCuC,EALuC,KAK9BC,EAL8B,KAO9C/B,qBAAU,WACgC,OAAlCzD,aAAaC,QAAQ,UACrBuF,GAAW,KAEhB,CAACzC,EAASyC,IAEb,IAAM3B,EAAa,uCAAG,WAAOrF,GAAP,eAAA4B,EAAA,6DAClB5B,EAAMsF,iBACNwB,GAAU,GAFQ,SAGEpD,GAAMC,EAAOC,GAHf,YAGZqD,EAHY,gCAKdzF,aAAa0F,QACb1F,aAAa2F,QAAQ,QAASF,GAC9BlE,OAAOqE,SAASC,SAPF,2BAUlB7F,aAAa0F,QACbJ,GAAU,GAXQ,4CAAH,sDAenB,OAAOC,EAAU,KACb,uBAAMnB,SAAUP,EAAe7F,UAAWF,EAAQgH,KAAlD,UACKO,GACD,cAAC,KAAD,CAAUS,UAAW,EAAGxB,QAAQ,SAASyB,SAAU,UAAW/H,UAAWF,EAAQkH,QAAjF,2BAIA,cAACgB,GAAA,EAAD,CAAWhI,UAAWF,EAAQkH,QAA9B,SACI,eAACiB,GAAA,EAAD,CAAazD,MAAO6C,EAApB,UACI,cAACa,GAAA,EAAD,CAAYC,QAAQ,QAApB,oBACA,cAACC,GAAA,EAAD,CACIxF,GAAG,QACHzC,KAAK,QACLC,MAAO+D,EACP5D,SAAU,SAACC,GAAD,OAAWyG,EAASzG,EAAMI,OAAOR,eAIvD,cAAC4H,GAAA,EAAD,CAAWhI,UAAWF,EAAQkH,QAA9B,SACI,eAACiB,GAAA,EAAD,CAAazD,MAAO6C,EAApB,UACI,cAACa,GAAA,EAAD,CAAYC,QAAQ,WAApB,sBACA,cAACC,GAAA,EAAD,CACIxF,GAAG,WACHzC,KAAMgH,EAAe,OAAS,WAC9B/G,MAAOgE,EACP7D,SAAU,SAACC,GAAD,OAAW0G,EAAY1G,EAAMI,OAAOR,QAC9CiI,aACI,cAACC,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAAC/B,EAAA,EAAD,CACIgC,aAAW,6BACX9B,QAAS,kBAAMU,GAAgB,SAAAqB,GAAI,OAAKA,MACxCC,YAAc,SAAAlI,GAAK,OAAIA,EAAMsF,kBAHjC,SAKKqB,EAAe,cAACwB,GAAA,EAAD,IAAgB,cAACC,GAAA,EAAD,eAOxD,cAACZ,GAAA,EAAD,CAAWhI,UAAWF,EAAQkH,QAA9B,SACI,cAACH,EAAA,EAAD,CAAQP,QAAQ,YAAYG,MAAM,UAAUtG,KAAM,SAAlD,6B,uICvDD0I,GA9BE,WACf,IAAMC,EAAcC,cAAcC,SAC5BC,EAAgB,CACpB,CAAEC,MAAO,IAAKjE,MAAO,eAAgBkE,KAAM,cAAC,KAAD,CAAa1C,MAAM,eAC9D,CAAEyC,MAAO,UAAWjE,MAAO,eAAgBkE,KAAM,cAAC,KAAD,CAAY1C,MAAM,eACnE,CAAEyC,MAAO,UAAWjE,MAAO,gBAAiBkE,KAAM,cAAC,KAAD,CAAa1C,MAAM,eACrE,CAAEyC,MAAO,YAAajE,MAAO,aAAckE,KAAM,cAAC,KAAD,CAAkB1C,MAAM,eACzE,CAAEyC,MAAO,mBAAoBjE,MAAO,mBAAoBkE,KAAM,cAAC,KAAD,CAAgB1C,MAAM,gBAGtF,OACE,8BACGwC,EAAMvD,KAAI,SAAC0D,GAAD,OACT,eAACC,GAAA,EAAD,CAEE9H,UAAW+H,IACXC,GAAIH,EAAKF,MACTM,SAAUV,IAAgBM,EAAKF,MAC/BO,QAAM,EALR,UAOE,cAACC,GAAA,EAAD,UACGN,EAAKD,OAER,cAACQ,GAAA,EAAD,CAAcC,QAASR,EAAKnE,UATvBmE,EAAKF,a,oGCwDLhK,gBA9DA,SAACC,GAAD,OAAkBC,YAAa,CAC5CyK,iBAAkB,CAChBC,SAAU,WACVC,WAAY5K,EAAMiC,eA2DPlC,EAtDS,SAAC,GAAuC,IAArCY,EAAoC,EAApCA,QAAoC,EAC/BkF,mBAAS,IADsB,mBACtDgF,EADsD,KAC7CC,EAD6C,KAY7D,OATAxE,qBAAU,YACQ,uCAAG,4BAAArD,EAAA,sEACKW,IADL,OACXiH,EADW,OAEjBC,EAAWD,GAFM,2CAAH,qDAIhBE,KACC,IAID,qCACE,eAAC5I,EAAA,EAAD,CAAY+E,cAAY,EAACC,QAAQ,KAAjC,UACG0D,EAAQG,OADX,cAGA,cAACC,GAAA,EAAD,CAAgB7I,UAAW8I,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9B,aAAW,gBAAlB,UACE,cAAC+B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,iBACA,cAACA,GAAA,EAAD,yBAGJ,cAACC,GAAA,EAAD,UACGV,EAAQtE,KAAI,SAACvD,GAAD,OACX,eAACqI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWlJ,UAAU,KAAKoJ,MAAM,MAAhC,SACGxI,EAAOS,KAEV,eAAC6H,GAAA,EAAD,WACE,cAACnB,GAAA,EAAD,CACE/H,UAAWqJ,IACXrB,GAAE,kBAAapH,EAAOS,IACtB6D,MAAM,YAHR,SAKGtE,EAAO8C,SAER9C,EAAO4D,WACP,sBAAMd,MAAM,2BAAZ,SACE,cAAC,KAAD,CAAkBwB,MAAM,YAAYzG,UAAWF,EAAQ+J,0BAdhD1H,EAAOS,oB,mDC4ErB1D,gBA3GA,SAACC,GAAD,OAAkBC,YAAa,CAC5CyL,MAAO,CACLvL,aAAc,IAEhBwL,UAAW,CACTC,WAAY,gBAsGD7L,CAAmB4F,aAhGf,SAAC,GAAkD,IAAhDhF,EAA+C,EAA/CA,QAASkL,EAAsC,EAAtCA,MAAOjG,EAA+B,EAA/BA,QAA+B,EACtDC,mBAASrE,SAASqK,EAAM3H,OAAOT,KAArCA,EAD4D,sBAEvCoC,mBAAS,CAAEpC,GAAI,EAAGqC,MAAO,GAAIG,YAAa,GAAI5C,YAAa,GAAoBuD,WAAW,IAFnD,mBAE5D5D,EAF4D,KAEpD8I,EAFoD,OAGnCjG,mBAAS,GAH0B,mBAG5DrD,EAH4D,KAGlD4D,EAHkD,OAI3BP,oBAAS,GAJkB,mBAI5DkG,EAJ4D,KAI9CC,EAJ8C,KAMnE1F,qBAAU,YACW,uCAAG,4BAAArD,EAAA,sEACCa,GAAUL,GADX,OACdT,EADc,OAEpB8I,EAAU9I,GAFU,2CAAH,qDAInBiJ,KACC,CAACxI,IAGJ,IAAMyI,EAAuB,SAAChL,GAC5B,OAAQA,EAAWC,OAASD,EAAWiF,aAAgB3D,GAGnD2J,EAAY,uCAAG,sBAAAlJ,EAAA,sEACbkB,GAAaV,GADA,OAEnBmC,EAAQmB,KAAR,KAFmB,2CAAH,qDAKZqF,EAAa,uCAAG,4BAAAnJ,EAAA,sEACQS,EAAa,2BAAKV,GAAN,IAAc4D,WAAW,KAD7C,OACdyF,EADc,OAEpBP,EAAUO,GACVL,GAAgB,GAHI,2CAAH,qDAMnB,OACE,mCACGhJ,GACC,qCACE,eAACb,EAAA,EAAD,CAAYtB,UAAWF,EAAQ+K,MAAOvE,QAAQ,KAA9C,UACGnE,EAAO8C,OACN9C,EAAO4D,WACP,mCACE,cAACS,EAAA,EAAD,CAAYvB,MAAM,gBAAayB,QAAS6E,EAAxC,SACE,cAAC,KAAD,CAAW9E,MAAM,kBAIvB,cAACD,EAAA,EAAD,CAAYgC,aAAW,SAASvD,MAAM,aAAUyB,QAAS4E,EAAzD,SACE,cAAC,KAAD,CAAY7E,MAAM,mBAGrBtE,EAAOiB,KACN,cAAC9B,EAAA,EAAD,CAAYtB,UAAWF,EAAQ+K,MAA/B,SACE,cAACvB,GAAA,EAAD,CAAMmC,KAAMtJ,EAAOiB,IAAKxC,OAAO,SAA/B,SACGuB,EAAOiB,QAId,cAAC,EAAD,CACEzB,SAAUA,EACVC,cAAe,SAACpB,GAAD,OAAW+E,EAAY5E,SAASH,EAAMI,OAAOR,WAE9D,cAACgK,GAAA,EAAD,CAAgBpK,UAAWF,EAAQ+K,MAAOtJ,UAAW8I,KAArD,SACE,eAACC,GAAA,EAAD,CACEoB,KAAK,QACLlD,aAAW,gBAFb,UAIE,cAAC+B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,yBAGJ,cAACC,GAAA,EAAD,UACGvI,EAAOK,YACLmJ,MAAK,SAACvJ,EAAGwJ,GAAJ,OAAWxJ,EAAEQ,IAAMgJ,EAAEhJ,GAAMR,EAAEQ,GAAKgJ,EAAEhJ,GAAK,GAAK,EAAK,KACxD8C,KAAI,SAACrF,GAAD,OACH,eAACmK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,oBACMY,EAAqBhL,IAAe,GAD1C,YACgDA,EAAWU,QAE3D,cAAC0J,GAAA,EAAD,UAAYpK,EAAWW,SAJVX,EAAWuC,cAUpC,cAACtB,EAAA,EAAD,CAAYtB,UAAWF,EAAQ+K,MAAOvE,QAAQ,KAA9C,yBAGA,cAAChF,EAAA,EAAD,CAAYtB,UAAWF,EAAQgL,UAA/B,SACG3I,EAAOiD,cAEV,cAACyG,GAAA,EAAD,CAAUC,KAAMZ,EAAca,iBAAkB,IAAMC,QAAS,kBAAMb,GAAgB,IAAQc,QAAQ,kC,wCCzBhG/M,gBAhFA,SAACC,GAAD,OAAkBC,YAAa,CAC5CsF,QAAS,CACPpF,aAAc,QA8EHJ,EAxEM,SAAC,GAAoC,IAAlCY,EAAiC,EAAjCA,QAAiC,EACzBkF,mBAAS,YADgB,mBAChD7B,EADgD,KACvC+I,EADuC,OAEjClH,mBAAS,IAFwB,mBAEhD5B,EAFgD,KAE3C+B,EAF2C,OAGnBH,oBAAS,GAHU,mBAGhDmH,EAHgD,KAGpCC,EAHoC,OAI3BpH,mBAAS,IAJkB,mBAIhD7C,EAJgD,KAIxC8I,EAJwC,OAKjBjG,mBAAS,IALQ,mBAKhDxC,EALgD,KAKnCgD,EALmC,KAOjDK,EAAa,uCAAG,WAAOrF,GAAP,eAAA4B,EAAA,6DACpB5B,EAAMsF,iBADc,SAEC5C,GAAaC,EAASC,GAFvB,oBAEdV,EAFc,kBAGhBA,OAHgB,EAGhBA,EAAQ8B,OAHQ,uBAIlByB,MAAMvD,EAAO8B,OAJK,0BAOpByG,EAAUvI,EAAOP,QACjBqD,EAAe9C,EAAOF,YAAYkD,KAAI,SAACrF,GAAD,MAAiB,CACrDiF,aAAcjF,EAAWiF,aACzBvE,KAAMV,EAAWU,MAAQ,GACzBT,OAAQD,EAAWC,QAAU,EAC7BU,KAAMX,EAAWW,UAEnBoL,GAAc,GAdM,4CAAH,sDAkBnB,OACE,sCACID,GACA,uBAAMhG,YAAU,EAACC,SAAUP,EAA3B,UACE,cAACvE,EAAA,EAAD,CAAY+E,cAAY,EAACC,QAAQ,KAAjC,2BAGA,cAACrG,EAAA,EAAD,CACED,UAAWF,EAAQ4E,QACnB9B,GAAG,MACH1C,MAAM,MACNqG,WAAS,EACTnG,MAAOgD,EACP7C,SAAU,SAACC,GAAD,OAAW2E,EAAO3E,EAAMI,OAAOR,UAE3C,cAAC4H,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAa1G,UAAU,WAAWvB,UAAWF,EAAQ4E,QAArD,UACE,cAAC2H,GAAA,EAAD,CAAW9K,UAAU,SAArB,iCACA,cAAC+K,GAAA,EAAD,CACE9D,aAAW,cACXxH,KAAK,UACLZ,MAAO+C,EACP5C,SAAU,SAACC,GAAD,OAAW0L,EAAW1L,EAAMI,OAAOR,QAJ/C,SAME,cAACmM,GAAA,EAAD,CACEnM,MAAM,WACNoM,QAAS,cAACC,GAAA,EAAD,IACTvM,MAAM,oBAKd,cAAC2G,EAAA,EAAD,CAAQP,QAAQ,YAAYG,MAAM,UAAUtG,KAAK,SAAjD,4BAKHgM,GACC,cAAC,GAAD,CACEhK,OAAQA,EACRK,YAAaA,U,wCCoCRtD,gBA9GA,SAACC,GAAD,OAAkBC,YAAa,CAC5CsN,KAAM,CACJC,MAAO,QAETC,QAAS,CACPC,gBAAiB1N,EAAM2N,QAAQlD,QAAQmD,MACvCtG,MAAOtH,EAAM2N,QAAQlD,QAAQoD,aAC7B,UAAW,CACTH,gBAAiB1N,EAAM2N,QAAQlD,QAAQmD,QAG3CE,QAAS,CACP1N,QAAS,QACTgJ,SAAU,YAEZ2E,YAAa,CACXC,eAAgB,gBAElBC,cAAe,CACb7E,SAAU,WACV8E,MAAO,EACPC,OAAQ,OAyFGpO,EAnFO,SAAC,GAAqC,IAAnCY,EAAkC,EAAlCA,QAAkC,EAC/BkF,mBAAS,IADsB,mBAClDuI,EADkD,KAC3CC,EAD2C,OAEzBC,IAAMzI,UAAU,GAFS,mBAElD0I,EAFkD,KAExCC,EAFwC,KAInDC,EAAQ,uCAAG,4BAAAxL,EAAA,sEACKsB,KADL,QACT6J,EADS,QAELpD,SACRqD,EAASD,GACTI,EAAYJ,EAAM,GAAG3K,KAJR,2CAAH,qDAQd6C,qBAAU,WACRmI,MACC,IAEH,IAOMC,EAAmB,SAACjK,GAAD,8CAAgB,WACvCpD,GADuC,SAAA4B,EAAA,sEAGjCuB,GAAeC,EAAMpD,EAAMI,OAAOkN,SAHD,OAIvCF,IAJuC,2CAAhB,uDAOnBG,EAAgB,uCAAG,WAAOnL,GAAP,SAAAR,EAAA,sEACjB6B,GAAWrB,GADM,OAEvBgL,IAFuB,2CAAH,sDAKtB,OACE,sBAAK5N,UAAWF,EAAQ4M,KAAxB,UACE,cAACpL,EAAA,EAAD,CAAY+E,cAAY,EAACC,QAAQ,KAAjC,wBAGCiH,EAAM7H,KAAI,SAAC3B,GAAD,OACT,eAACiK,GAAA,EAAD,CAEEN,SAAUA,IAAa3J,EAAKnB,GAC5BrC,UA5BuB0N,EA4BSlK,EAAKnB,GA5BI,SAC/CpC,EACA0N,GAEAP,EAAYO,EAAaD,GAAS,KAqB9B,UAKE,cAACE,GAAA,EAAD,CAAkBnO,UAAWF,EAAQ8M,QAAS9M,QAAS,CACrDsO,QAAStO,EAAQ8M,SADnB,SAGE,cAACtL,EAAA,EAAD,UAAa,IAAI+M,KAAKtK,EAAKuK,SAASC,iBAAiBC,MAAM,KAAK,OAElE,eAACC,GAAA,EAAD,CAAkBzO,UAAWF,EAAQmN,QAArC,UACGlJ,EAAK2K,SACJ,cAACpN,EAAA,EAAD,CAAYC,UAAU,IAAIoN,WAAW,EAArC,SACE,6BAAK5K,EAAK2K,YAGb3K,EAAKC,SAAS0B,KAAI,SAAC9B,GAAD,OACjB,gCACE,cAACgL,GAAA,EAAD,CACEd,QAASlK,EAAKC,KACdtD,SAAUsN,EAAiBjK,KAE7B,cAAC0F,GAAA,EAAD,CACEtJ,UAAW4D,EAAKC,KAAO/D,EAAQoN,YAAc,GAC7C3L,UAAWqJ,IACXrB,GAAE,kBAAa3F,EAAKiL,WACpBpI,MAAM,YAJR,SAMG7C,EAAKqB,UAXArB,EAAKhB,OAejB,cAAC4D,EAAA,EAAD,CAAYxG,UAAWF,EAAQsN,cAAe5E,aAAW,SAAS9B,QAAS,kBAAMqH,EAAiBhK,EAAKnB,KAAvG,SACE,cAAC,KAAD,CAAY6D,MAAM,qBAhCjB1C,EAAKnB,IA1BY,IAACqL,WC8ClB/O,gBA3FA,SAACC,GAAD,OAAkBC,YAAa,CAC5CsF,QAAS,CACPpF,aAAc,IAEhBuK,iBAAkB,CAChBC,SAAU,WACVC,WAAY5K,EAAMiC,eAqFPlC,CAAmB4F,aA/Ef,SAAC,GAA2C,IAAzChF,EAAwC,EAAxCA,QAASiF,EAA+B,EAA/BA,QAA+B,EAC9BC,mBAAS,IADqB,mBACrDgF,EADqD,KAC5CC,EAD4C,OAE9BjF,mBAAS,IAFqB,mBAErD0J,EAFqD,KAE5CI,EAF4C,OAGhB9J,mBAAS,IAHO,mBAGrD+J,EAHqD,KAGrCC,EAHqC,KAK5DvJ,qBAAU,YACQ,uCAAG,4BAAArD,EAAA,sEACKW,IADL,OACXiH,EADW,OAEjBC,EAAWD,GAFM,2CAAH,qDAIhBE,KACC,IAEH,IAAMrE,EAAa,uCAAG,WAAOrF,GAAP,iBAAA4B,EAAA,6DACpB5B,EAAMsF,iBACA/B,EAAgB,CACpB2K,UACA1E,QAAS+E,GAJS,SAOCjL,GAAWC,GAPZ,OAOdrB,EAPc,OAQfsD,MAAMtD,KACTuD,MAAM,qBACNlB,EAAQmB,KAAR,aAVkB,2CAAH,sDAcb+I,EAAuB,SAAC9M,GAAD,OAAoB,SAC/C3B,GAEIA,EAAMI,OAAOkN,QACfkB,EAAkB,GAAD,mBAAKD,GAAL,CAAqB5M,EAAOS,MAE7CoM,EAAkBD,EAAeG,QAAO,SAACC,GAAD,OAAcA,IAAahN,EAAOS,SAI9E,OACE,uBAAMuD,YAAU,EAACC,SAAUP,EAA3B,UACE,cAACvE,EAAA,EAAD,CAAY+E,cAAY,EAACC,QAAQ,KAAjC,8BAGA,cAACrG,EAAA,EAAD,CACED,UAAWF,EAAQ4E,QACnB9B,GAAG,UACH1C,MAAM,uBACNqG,WAAS,EACTnG,MAAOsO,EACPnO,SAAU,SAACC,GAAD,OAAWsO,EAAWtO,EAAMI,OAAOR,UAE/C,qBAAKJ,UAAWF,EAAQ4E,QAAxB,SACGsF,EAAQtE,KAAI,SAAAvD,GAAM,OACjB,gCACE,cAACyM,GAAA,EAAD,CACEd,QAASiB,EAAeK,SAASjN,EAAOS,IACxCrC,SAAU0O,EAAqB9M,KAEjC,cAACmH,GAAA,EAAD,CACE/H,UAAWqJ,IACXrB,GAAE,kBAAapH,EAAOS,IACtB6D,MAAM,YAHR,SAKGtE,EAAO8C,SAER9C,EAAO4D,WACP,sBAAMd,MAAM,2BAAZ,SACE,cAAC,KAAD,CAAkBwB,MAAM,YAAYzG,UAAWF,EAAQ+J,uBAdnD1H,EAAOS,SAoBrB,cAACiE,EAAA,EAAD,CAAQP,QAAQ,YAAYG,MAAM,UAAUtG,KAAK,SAAjD,8B,qBC4HSjB,gBA3LA,SAACC,GAAD,OAAkBC,YAAa,CAC1CsN,KAAM,CACFnN,QAAS,QAEb8P,QAAS,CACLC,aAAc,IAElBC,YAAY,aACRhQ,QAAS,OACT2B,WAAY,SACZsO,eAAgB,WAChBC,QAAS,SACNtQ,EAAMuQ,OAAOL,SAEpBM,OAAQ,CACJC,OAAQzQ,EAAMyQ,OAAOC,OAAS,EAC9BC,WAAY3Q,EAAM4Q,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ9Q,EAAM4Q,YAAYE,OAAOC,MACjCC,SAAUhR,EAAM4Q,YAAYI,SAASC,iBAG7CC,YAAa,CACTtG,WAxBY,IAyBZ4C,MAAM,eAAD,OAzBO,IAyBP,OACLmD,WAAY3Q,EAAM4Q,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ9Q,EAAM4Q,YAAYE,OAAOC,MACjCC,SAAUhR,EAAM4Q,YAAYI,SAASG,kBAG7CC,WAAY,CACR7Q,YAAa,IAEjB8Q,iBAAkB,CACdjR,QAAS,QAEb0F,MAAO,CACHrF,SAAU,GAEd6Q,YAAa,CACTlI,SAAU,WACVwC,WAAY,SACZ4B,MA3CY,IA4CZmD,WAAY3Q,EAAM4Q,YAAYC,OAAO,QAAS,CAC1CC,OAAQ9Q,EAAM4Q,YAAYE,OAAOC,MACjCC,SAAUhR,EAAM4Q,YAAYI,SAASG,kBAG7CI,iBAAiB,aACbC,UAAW,SACXb,WAAY3Q,EAAM4Q,YAAYC,OAAO,QAAS,CAC1CC,OAAQ9Q,EAAM4Q,YAAYE,OAAOC,MACjCC,SAAUhR,EAAM4Q,YAAYI,SAASC,gBAEzCzD,MAAOxN,EAAMiC,QAAQ,IACpBjC,EAAMyR,YAAYC,GAAG,MAAQ,CAC1BlE,MAAOxN,EAAMiC,QAAQ,KAG7B0P,aAAc3R,EAAMuQ,OAAOL,QAC3B0B,QAAS,CACLnR,SAAU,EACVoR,OAAQ,QACRC,SAAU,QAEdC,UAAW,CACPC,WAAYhS,EAAMiC,QAAQ,GAC1BD,cAAehC,EAAMiC,QAAQ,QAyHtBlC,EAnHH,SAAC,GAAyB,IAAxBY,EAAuB,EAAvBA,QAAuB,EACTkF,oBAAS,GADA,mBAC1B8G,EAD0B,KACpBsF,EADoB,OAELpM,oBAAS,GAFJ,mBAE1BqM,EAF0B,KAElBC,EAFkB,KAIjC7L,qBAAU,WACgC,OAAlCzD,aAAaC,QAAQ,UACrBqP,GAAU,KAEf,IAEH,IAAMC,EAAa,uCAAG,sBAAAnP,EAAA,sEACIqC,KADJ,yCAGdzC,aAAa0F,QACbnE,OAAOqE,SAASC,SAJF,0BAOlB5B,MAAM,wBAPY,2CAAH,qDAUnB,OACI,cAAC,IAAD,UACI,sBAAKjG,UAAWF,EAAQ4M,KAAxB,UACI,cAAC8E,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACIlJ,SAAS,WACTvI,UAAW0R,YAAK5R,EAAQ6P,OAAQ7D,GAAQhM,EAAQuQ,aAFpD,SAII,eAACsB,EAAA,EAAD,CAAS3R,UAAWF,EAAQuP,QAA5B,UACI,cAAC7I,EAAA,EAAD,CACIoL,KAAK,QACLnL,MAAM,YACN+B,aAAW,cACX9B,QAAS,kBAAM0K,GAAQ,IACvBpR,UAAW0R,YACP5R,EAAQyQ,WACRzE,GAAQhM,EAAQ0Q,kBAPxB,SAUI,cAAC,IAAD,MAEJ,cAAClP,EAAA,EAAD,CACIC,UAAU,KACV+E,QAAQ,KACRG,MAAM,UACNoL,QAAM,EACN7R,UAAWF,EAAQmF,MALvB,qBASA,cAAC,IAAD,CAAgBwB,MAAM,mBAG9B,eAACqL,EAAA,EAAD,CACIxL,QAAQ,YACRxG,QAAS,CACLiS,MAAOL,YAAK5R,EAAQ2Q,aAAc3E,GAAQhM,EAAQ4Q,mBAEtD5E,KAAMA,EALV,UAOI,qBAAK9L,UAAWF,EAAQyP,YAAxB,SACI,cAAC/I,EAAA,EAAD,CAAYE,QAAS,kBAAM0K,GAAQ,IAAnC,SACI,cAAC,IAAD,CAAiB3K,MAAM,kBAG/B,cAACuL,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACI,cAAC,GAAD,IACCZ,GACD,eAAChI,GAAA,EAAD,CAAUI,QAAM,EAAC/C,QAAS6K,EAA1B,UACI,cAAC7H,GAAA,EAAD,UACI,cAAC,KAAD,CAAejD,MAAM,gBAEzB,cAACkD,GAAA,EAAD,CAAcC,QAAS,oBAKnC,uBAAM5J,UAAWF,EAAQiR,QAAzB,UACI,qBAAK/Q,UAAWF,EAAQgR,eACxB,eAACoB,EAAA,EAAD,CAAWzS,SAAS,KAAKO,UAAWF,EAAQoR,UAA5C,UACKG,GACD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOc,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,GAAD,UAINd,GACF,cAAC,IAAD,CAAOc,KAAK,IAAZ,SACI,cAAC,GAAD,oBC3MbC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARlT,GAAQ0T,YAAe,CAC3B/F,QAAS,CAAElD,QAAS,CAAEkJ,KAAM,WAAaC,UAAW,CAAED,KAAM,cAG9DE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAkB/T,MAAOA,GAAzB,SACE,cAAC,GAAD,QAGJgU,SAASC,eAAe,SAM1BhB,O","file":"static/js/main.fc76e7a2.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { NewIngredient } from \"helpers/interfaces\";\n\nconst styles = (theme: Theme) => createStyles({\n  formRowFlex: {\n    marginBottom: 25,\n    display: \"flex\",\n  },\n  ingredientAmount: {\n    maxWidth: 60,\n    marginRight: 10,\n  },\n  ingredientMain: {\n    flexGrow: 1,\n    marginRight: 10,\n  },\n  ingredientUnit: {\n    maxWidth: 150,\n    marginRight: 10,\n  },\n});\n\ninterface IngredientFormRowProps extends WithStyles<typeof styles> {\n  ingredient: NewIngredient;\n  index: number;\n  updateIngredient: (index: number, ingredient: NewIngredient) => void;\n};\n\nconst IngredientFormRow = ({ classes, ...props }: IngredientFormRowProps) => {\n  return (\n    <div className={classes.formRowFlex}>\n      <TextField\n        className={classes.ingredientAmount}\n        label=\"Menge\"\n        type=\"number\"\n        value={props.ingredient.amount}\n        onChange={(event) => props.updateIngredient(props.index, { ...props.ingredient, amount: parseInt(event.target.value) })}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        className={classes.ingredientUnit}\n        label=\"Einheit\"\n        value={props.ingredient.unit}\n        onChange={(event) => props.updateIngredient(props.index, { ...props.ingredient, unit: event.target.value })}\n      />\n      <TextField\n        className={classes.ingredientMain}\n        label=\"Zutat\"\n        value={props.ingredient.name}\n        onChange={(event) => props.updateIngredient(props.index, { ...props.ingredient, name: event.target.value })}\n      />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(IngredientFormRow);\n","import React, { ChangeEvent } from \"react\";\nimport {withStyles,  WithStyles, createStyles, Theme } from '@material-ui/core';\nimport { TextField, Typography } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => createStyles({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    paddingBottom: theme.spacing(),\n  },\n  numField: {\n    maxWidth: 50,\n    marginRight: theme.spacing(),\n  }\n});\n\ninterface PortionSelectionProps extends WithStyles<typeof styles> {\n  portions: number,\n  changeHandler: (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void\n}\n\nconst PortionSelection = ({classes, ...props}: PortionSelectionProps) => {\n  return (\n    <Typography className={classes.wrapper} component=\"div\">\n      Zutaten für &nbsp;\n      <TextField\n        className={classes.numField}\n        type=\"number\"\n        InputProps={{ inputProps: { min: 1 } }}\n        value={props.portions}\n        onChange={props.changeHandler}\n      />\n      Portionen:\n    </Typography>\n  );\n}\n\nexport default withStyles(styles)(PortionSelection);\n","import axios from \"axios\";\nimport {Ingredient, NewPlan, Scrapers, NewRecipe, Recipe, Plan, Meal} from \"helpers/interfaces\";\n\nconst BASE_URL_AUTH = \"http://localhost:8000/users\";\nconst BASE_URL = \"http://localhost:8000/api\";\n\nconst _getAuthHeaders = () => {\n    return {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`};\n};\n\nexport async function createRecipe(recipe: NewRecipe): Promise<number> {\n    const result = await axios.post(`${BASE_URL}/recipes/`, {\n        ...recipe,\n        ingredient_set: recipe.ingredients,\n    }, {headers: _getAuthHeaders()});\n    // TODO: error handling\n    return result.data.id;\n}\n\nexport async function updateRecipe(recipe: Recipe): Promise<Recipe> {\n    const result = await axios.put(`${BASE_URL}/recipes/${recipe.id}/`, recipe, {headers: _getAuthHeaders()});\n    // TODO: error handling\n    return {...result.data, ingredients: result.data.ingredient_set};\n}\n\nexport async function getAllRecipes(): Promise<Recipe[]> {\n    const result = await axios.get(`${BASE_URL}/recipes/`, {headers: _getAuthHeaders()});\n    return result.data;\n}\n\nexport async function getRecipe(id: number): Promise<Recipe> {\n    const result = await axios.get(`${BASE_URL}/recipes/${id}/`, {headers: _getAuthHeaders()});\n    return {...result.data, ingredients: result.data.ingredient_set};\n}\n\nexport async function importRecipe(scraper: Scrapers, url: string): Promise<{ recipe: Recipe, ingredients: Ingredient[], error?: string }> {\n    const result = await axios.get(`${BASE_URL}/scrape/`, {\n        params: {scraper, url},\n        headers: _getAuthHeaders(),\n    });\n    // TODO: error handling\n    return {...result.data, url};\n}\n\nexport async function deleteRecipe(id: number) {\n    if (window.confirm(\"Rezept löschen?\")) {\n        await axios.delete(`${BASE_URL}/recipes/${id}/`, {headers: _getAuthHeaders()});\n    }\n}\n\nexport async function getAllPlans(): Promise<Plan[]> {\n    const result = await axios.get(`${BASE_URL}/plans/`, {headers: _getAuthHeaders()});\n    return result.data;\n}\n\nexport async function updateMealDone(meal: Meal, done: boolean) {\n    meal.done = done;\n    await axios.put(`${BASE_URL}/meals/${meal.id}/`, meal, {headers: _getAuthHeaders()});\n}\n\nexport async function createPlan(plan: NewPlan): Promise<number> {\n    const result = await axios.post(`${BASE_URL}/plans/`, {...plan, meal_set: []}, {headers: _getAuthHeaders()});\n    // TODO: error handling\n    return result.data.id;\n}\n\nexport async function deletePlan(id: number) {\n    if (window.confirm(\"Plan löschen?\")) {\n        await axios.delete(`${BASE_URL}/plans/${id}/`, {headers: _getAuthHeaders()});\n    }\n}\n\nexport async function login(email: string, password: string): Promise<string | undefined> {\n    try {\n        const result = await axios.post(`${BASE_URL_AUTH}/auth/login/`, {email, password});\n        return result.data.key || undefined;\n    } catch (error) {\n        console.error(error);\n        return undefined;\n    }\n}\n\nexport async function logout(): Promise<boolean> {\n    try {\n        await axios.post(`${BASE_URL_AUTH}/auth/logout/`, {}, {headers: _getAuthHeaders()});\n        return true;\n    } catch (error) {\n        console.error(error);\n        return false;\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport {\n  createStyles,\n  Theme,\n  Button,\n  IconButton,\n  TextField,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IngredientFormRow from \"modules/recipes/IngredientFormRow\";\nimport PortionSelection from \"modules/recipes/PortionSelection\";\nimport { createRecipe } from \"services/api\";\nimport { NewIngredient, NewRecipe } from \"helpers/interfaces\";\nimport { FormEvent } from \"react\";\n\nconst styles = (theme: Theme) => createStyles({\n  formRow: {\n    marginBottom: 25,\n  },\n  ingredients: {\n    display: \"flex\",\n    marginBottom: 10,\n  },\n  ingredientsList: {\n    flexGrow: 1,\n  },\n  addIngredient: {\n    alignSelf: \"flex-end\",\n    marginBottom: 10,\n  },\n});\n\ninterface CreateRecipeProps extends WithStyles<typeof styles>, RouteComponentProps {\n  recipe?: NewRecipe;\n  ingredients?: NewIngredient[];\n}\n\nconst CreateRecipe = ({ classes, history, ...props }: CreateRecipeProps) => {\n  const [title, setTitle] = useState(props.recipe?.title || \"\");\n  const [url, setUrl] = useState(props.recipe?.url || \"\");\n  const [description, setDescription] = useState(props.recipe?.description || \"\");\n  const [portions, setPortions] = useState(props.ingredients?.[0]?.num_portions || 2);\n  const [ingredients, setIngredients] = useState([{ amount: 0, unit: \"\", name: \"\", num_portions: 2 }] as NewIngredient[]);\n\n  useEffect(() => {\n    if (props.ingredients) {\n      setIngredients(props.ingredients.map(ingredient => ({ ...ingredient })));\n    }\n  }, [props.ingredients]);\n\n  const updateIngredient = (index: number, ingredient: NewIngredient) => {\n    const newIngredients: NewIngredient[] = ingredients.slice();\n    newIngredients[index] = { ...ingredient };\n    setIngredients(newIngredients);\n  };\n\n  const submitHandler = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const recipe: NewRecipe = {\n      title: title,\n      url: url,\n      description: description,\n      ingredients: ingredients.map((ingredient) => {\n        ingredient.num_portions = portions;\n        return ingredient;\n      }),\n      confirmed: false,\n    };\n\n    const result = await createRecipe(recipe);\n    if (!isNaN(result)) {\n      alert(\"Rezept gespeichert!\");\n      history.push(`recipe/${result}`);\n    }\n  };\n\n  const addIngredient = () => {\n    setIngredients([\n      ...ingredients,\n      { amount: 0, unit: \"\", name: \"\", num_portions: 2 },\n    ]);\n  };\n\n  return (\n    <form noValidate onSubmit={submitHandler}>\n      <Typography gutterBottom variant=\"h5\">\n        Neues Rezept\n      </Typography>\n      <TextField\n        className={classes.formRow}\n        id=\"title\"\n        label=\"Titel\"\n        fullWidth\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n      />\n      <TextField\n        className={classes.formRow}\n        id=\"url\"\n        label=\"URL (optional)\"\n        fullWidth\n        value={url}\n        onChange={(event) => setUrl(event.target.value)}\n      />\n      <PortionSelection\n        portions={portions}\n        changeHandler={(event) => setPortions(parseInt(event.target.value))}\n      />\n      <div className={classes.ingredients}>\n        <div className={classes.ingredientsList}>\n          {ingredients.map((ingredient, index) => (\n            <IngredientFormRow key={index} index={index} ingredient={ingredient} updateIngredient={updateIngredient} />\n          ))}\n        </div>\n        <IconButton\n          className={classes.addIngredient}\n          color=\"secondary\"\n          onClick={addIngredient}\n        >\n          <AddIcon />\n        </IconButton>\n      </div>\n      <TextField\n        className={classes.formRow}\n        id=\"description\"\n        label=\"Beschreibung\"\n        rows={20}\n        variant=\"outlined\"\n        multiline\n        fullWidth\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n        Speichern\n      </Button>\n    </form>\n  );\n};\n\nexport default withStyles(styles)(withRouter(CreateRecipe));\n","import React, {useEffect, useState} from \"react\";\nimport {\n    Button,\n    createStyles,\n    FormControl,\n    FormGroup,\n    IconButton, Input, InputAdornment,\n    InputLabel,\n    Theme,\n    withStyles,\n    WithStyles,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {login} from \"services/api\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\n\nconst styles = (theme: Theme) => createStyles({\n    form: {\n        maxWidth: theme.spacing(50),\n        margin: \"0 auto\",\n    },\n    section: {\n        marginBottom: theme.spacing(3),\n    },\n});\n\ninterface LoginProps extends WithStyles<typeof styles>, RouteComponentProps {}\n\nconst Login = ({classes, history}: LoginProps) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [errors, setErrors] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\") === null) {\n            setLoading(false);\n        }\n    }, [history, setLoading]);\n\n    const submitHandler = async (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        setErrors(false);\n        const token = await login(email, password);\n        if (token) {\n            localStorage.clear();\n            localStorage.setItem(\"token\", token);\n            window.location.reload();\n            return;\n        }\n        localStorage.clear();\n        setErrors(true);\n    };\n\n\n    return loading ? null : (\n        <form onSubmit={submitHandler} className={classes.form}>\n            {errors &&\n            <MuiAlert elevation={6} variant=\"filled\" severity={\"warning\"} className={classes.section}>\n                Login failed!\n            </MuiAlert>\n            }\n            <FormGroup className={classes.section}>\n                <FormControl error={errors}>\n                    <InputLabel htmlFor=\"email\">E-Mail</InputLabel>\n                    <Input\n                        id=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                </FormControl>\n            </FormGroup>\n            <FormGroup className={classes.section}>\n                <FormControl error={errors}>\n                    <InputLabel htmlFor=\"password\">Password</InputLabel>\n                    <Input\n                        id=\"password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => setShowPassword(curr => !curr)}\n                                    onMouseDown={(event => event.preventDefault())}\n                                >\n                                    {showPassword ? <Visibility/> : <VisibilityOff/>}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </FormGroup>\n            <FormGroup className={classes.section}>\n                <Button variant=\"contained\" color=\"primary\" type={\"submit\"}>\n                    Submit\n                </Button>\n            </FormGroup>\n        </form>\n    );\n};\n\nexport default withStyles(styles)(withRouter(Login));","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\n\ntype Page = { route: string; title: string, icon: JSX.Element };\n\nconst NavItems = () => {\n  const currentPath = useLocation().pathname;\n  const pages: Page[] = [\n    { route: \"/\", title: \"Alle Rezepte\", icon: <ListAltIcon color=\"secondary\" /> },\n    { route: \"/create\", title: \"Neues Rezept\", icon: <CreateIcon color=\"secondary\" /> },\n    { route: \"/import\", title: \"Rezept Import\", icon: <PublishIcon color=\"secondary\" /> },\n    { route: \"/weekplan\", title: \"Wochenplan\", icon: <LibraryBooksIcon color=\"secondary\" /> },\n    { route: \"/create-weekplan\", title: \"Neuer Wochenplan\", icon: <LibraryAddIcon color=\"secondary\" /> },\n  ];\n\n  return (\n    <div>\n      {pages.map((page) => (\n        <ListItem\n          key={page.route}\n          component={Link}\n          to={page.route}\n          selected={currentPath === page.route}\n          button\n        >\n          <ListItemIcon>\n            {page.icon}\n          </ListItemIcon>\n          <ListItemText primary={page.title} />\n        </ListItem>\n      ))}\n    </div>\n  );\n}\n\nexport default NavItems;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  createStyles,\n  Theme,\n  Link,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableContainer,\n  TableBody,\n  TableCell,\n  Typography,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Recipe } from \"helpers/interfaces\";\nimport { getAllRecipes } from \"services/api\";\n\nconst styles = (theme: Theme) => createStyles({\n  unconfirmed_icon: {\n    fontSize: \"1.125rem\",\n    marginLeft: theme.spacing()\n  }\n});\ninterface RecipesOverviewProps extends WithStyles<typeof styles> { };\n\nconst RecipesOverview = ({ classes }: RecipesOverviewProps) => {\n  const [recipes, setRecipes] = useState([] as Recipe[]);\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      const recipes = await getAllRecipes();\n      setRecipes(recipes);\n    }\n    getRecipes();\n  }, []);\n\n\n  return (\n    <>\n      <Typography gutterBottom variant=\"h5\">\n        {recipes.length} Rezepte\n        </Typography>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"recipes table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Titel</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {recipes.map((recipe) => (\n              <TableRow key={recipe.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {recipe.id}\n                </TableCell>\n                <TableCell>\n                  <Link\n                    component={RouterLink}\n                    to={`/recipe/${recipe.id}`}\n                    color=\"secondary\"\n                  >\n                    {recipe.title}\n                  </Link>\n                  {!recipe.confirmed && \n                    <span title=\"Noch nicht bestätigt!\">\n                      <ErrorOutlineIcon color=\"secondary\" className={classes.unconfirmed_icon} />\n                    </span>\n                  }\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default withStyles(styles)(RecipesOverview);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  createStyles,\n  IconButton,\n  Theme,\n  Link,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableContainer,\n  TableBody,\n  TableCell,\n  Typography,\n  withStyles,\n  WithStyles,\n  Snackbar\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { Ingredient, Recipe } from \"helpers/interfaces\";\nimport { deleteRecipe, getRecipe, updateRecipe } from \"services/api\";\nimport PortionSelection from \"modules/recipes/PortionSelection\";\n\nconst styles = (theme: Theme) => createStyles({\n  block: {\n    marginBottom: 15,\n  },\n  textBlock: {\n    whiteSpace: \"pre-line\",\n  },\n});\ninterface MatchParams { id: string; }\ninterface ShowRecipeProps extends WithStyles<typeof styles>, RouteComponentProps<MatchParams> { };\n\nconst ShowRecipe = ({ classes, match, history }: ShowRecipeProps) => {\n  const [id] = useState(parseInt(match.params.id));\n  const [recipe, setRecipe] = useState({ id: 0, title: \"\", description: \"\", ingredients: [] as Ingredient[], confirmed: true } as Recipe);\n  const [portions, setPortions] = useState(2);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n\n  useEffect(() => {\n    const getRecipeById = async () => {\n      const recipe = await getRecipe(id);\n      setRecipe(recipe);\n    }\n    getRecipeById();\n  }, [id]);\n\n\n  const getAmountForPortions = (ingredient: Ingredient) => {\n    return (ingredient.amount / ingredient.num_portions) * portions;\n  }\n\n  const handleDelete = async () => {\n    await deleteRecipe(id);\n    history.push(`/`);\n  }\n\n  const handleConfirm = async () => {\n    const updatedRecipe = await updateRecipe({ ...recipe, confirmed: true });\n    setRecipe(updatedRecipe);\n    setShowSnackbar(true);\n  }\n\n  return (\n    <>\n      {recipe && (\n        <>\n          <Typography className={classes.block} variant=\"h4\">\n            {recipe.title}\n            {!recipe.confirmed &&\n              <>\n                <IconButton title=\"Bestätigen\" onClick={handleConfirm}>\n                  <CheckIcon color=\"secondary\" />\n                </IconButton>\n              </>\n            }\n            <IconButton aria-label=\"delete\" title=\"Löschen\" onClick={handleDelete}>\n              <DeleteIcon color=\"secondary\" />\n            </IconButton>\n          </Typography>\n          {recipe.url && (\n            <Typography className={classes.block}>\n              <Link href={recipe.url} target=\"_blank\">\n                {recipe.url}\n              </Link>\n            </Typography>\n          )}\n          <PortionSelection\n            portions={portions}\n            changeHandler={(event) => setPortions(parseInt(event.target.value))}\n          />\n          <TableContainer className={classes.block} component={Paper}>\n            <Table\n              size=\"small\"\n              aria-label=\"recipes table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Menge</TableCell>\n                  <TableCell>Zutat</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {recipe.ingredients\n                  .sort((a, b) => (a.id && b.id ? (a.id > b.id ? 1 : -1) : 1))\n                  .map((ingredient) => (\n                    <TableRow key={ingredient.id}>\n                      <TableCell>\n                        {`${getAmountForPortions(ingredient) || \"\"} ${ingredient.unit}`}\n                      </TableCell>\n                      <TableCell>{ingredient.name}</TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <Typography className={classes.block} variant=\"h5\">\n            Zubereitung\n            </Typography>\n          <Typography className={classes.textBlock}>\n            {recipe.description}\n          </Typography>\n          <Snackbar open={showSnackbar} autoHideDuration={1000} onClose={() => setShowSnackbar(false)} message=\"Rezept bestätigt!\" />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default withStyles(styles)(withRouter(ShowRecipe));\n","import React, { FormEvent, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  Typography,\n  FormGroup,\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport { importRecipe } from \"services/api\";\nimport CreateRecipe from \"modules/recipes/CreateRecipe\";\nimport { NewIngredient, NewRecipe, Scrapers } from \"helpers/interfaces\";\n\nconst styles = (theme: Theme) => createStyles({\n  formRow: {\n    marginBottom: 25,\n  },\n});\n\ninterface ImportRecipeProps extends WithStyles<typeof styles> { };\n\nconst ImportRecipe = ({ classes }: ImportRecipeProps) => {\n  const [scraper, setScraper] = useState(\"chefkoch\" as Scrapers)\n  const [url, setUrl] = useState(\"\");\n  const [importDone, setImportDone] = useState(false);\n  const [recipe, setRecipe] = useState({} as NewRecipe);\n  const [ingredients, setIngredients] = useState([] as NewIngredient[]);\n\n  const submitHandler = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const result = await importRecipe(scraper, url);\n    if (result?.error) {\n      alert(result.error);\n      return;\n    }\n    setRecipe(result.recipe);\n    setIngredients(result.ingredients.map((ingredient) => ({\n      num_portions: ingredient.num_portions,\n      unit: ingredient.unit || \"\",\n      amount: ingredient.amount || 0,\n      name: ingredient.name,\n    })));\n    setImportDone(true);\n  }\n\n\n  return (\n    <>\n      {!importDone && (\n        <form noValidate onSubmit={submitHandler}>\n          <Typography gutterBottom variant=\"h5\">\n            Rezept Import\n            </Typography>\n          <TextField\n            className={classes.formRow}\n            id=\"url\"\n            label=\"URL\"\n            fullWidth\n            value={url}\n            onChange={(event) => setUrl(event.target.value)}\n          />\n          <FormGroup>\n            <FormControl component=\"fieldset\" className={classes.formRow}>\n              <FormLabel component=\"legend\">Importieren von ...</FormLabel>\n              <RadioGroup\n                aria-label=\"import from\"\n                name=\"scraper\"\n                value={scraper}\n                onChange={(event) => setScraper(event.target.value as Scrapers)}\n              >\n                <FormControlLabel\n                  value=\"chefkoch\"\n                  control={<Radio />}\n                  label=\"Chefkoch\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </FormGroup>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Importieren\n            </Button>\n        </form>\n      )}\n      {importDone && (\n        <CreateRecipe\n          recipe={recipe}\n          ingredients={ingredients}\n        />\n      )}\n    </>\n  );\n}\n\nexport default withStyles(styles)(ImportRecipe);\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport {\n  Checkbox,\n  withStyles,\n  WithStyles,\n  createStyles,\n  Theme,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Link,\n  IconButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Plan, Meal } from \"helpers/interfaces\";\nimport { getAllPlans, updateMealDone, deletePlan } from \"services/api\";\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    width: \"100%\",\n  },\n  summary: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n    '&:focus': {\n      backgroundColor: theme.palette.primary.light,\n    }\n  },\n  details: {\n    display: \"block\",\n    position: \"relative\"\n  },\n  recipe_done: {\n    textDecoration: \"line-through\",\n  },\n  delete_button: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n  }\n});\n\ninterface PlansOverviewProps extends WithStyles<typeof styles> { }\n\nconst PlansOverview = ({ classes }: PlansOverviewProps) => {\n  const [plans, setPlans] = useState([] as Plan[]);\n  const [expanded, setExpanded] = React.useState(-1);\n\n  const getPlans = async () => {\n    const plans = await getAllPlans();\n    if (plans.length) {\n      setPlans(plans);\n      setExpanded(plans[0].id);\n    }\n  }\n\n  useEffect(() => {\n    getPlans();\n  }, []);\n\n  const handleAccordionChange = (panel: number) => (\n    event: ChangeEvent<{}>,\n    isExpanded: boolean\n  ) => {\n    setExpanded(isExpanded ? panel : -1);\n  };\n\n  const handleDoneChange = (meal: Meal) => async (\n    event: ChangeEvent<HTMLInputElement>\n  ) => {\n    await updateMealDone(meal, event.target.checked);\n    getPlans();\n  };\n\n  const handleDeletePlan = async (id: number) => {\n    await deletePlan(id);\n    getPlans();\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography gutterBottom variant=\"h5\">\n        Wochenplan\n      </Typography>\n      {plans.map((plan) => (\n        <Accordion\n          key={plan.id}\n          expanded={expanded === plan.id}\n          onChange={handleAccordionChange(plan.id)}\n        >\n          <AccordionSummary className={classes.summary} classes={{\n            focused: classes.summary\n          }}>\n            <Typography>{new Date(plan.created).toLocaleString().split(',')[0]}</Typography>\n          </AccordionSummary>\n          <AccordionDetails className={classes.details}>\n            {plan.comment && (\n              <Typography component=\"p\" paragraph={true}>\n                <em>{plan.comment}</em>\n              </Typography>\n            )}\n            {plan.meal_set.map((meal) => (\n              <div key={meal.id}>\n                <Checkbox\n                  checked={meal.done}\n                  onChange={handleDoneChange(meal)}\n                />\n                <Link\n                  className={meal.done ? classes.recipe_done : \"\"}\n                  component={RouterLink}\n                  to={`/recipe/${meal.recipe_id}`}\n                  color=\"secondary\"\n                >\n                  {meal.title}\n                </Link>\n              </div>\n            ))}\n            <IconButton className={classes.delete_button} aria-label=\"delete\" onClick={() => handleDeletePlan(plan.id)}>\n              <DeleteIcon color=\"secondary\" />\n            </IconButton>\n          </AccordionDetails>\n        </Accordion>\n      ))}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PlansOverview);\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport {\n  Checkbox,\n  withStyles,\n  WithStyles,\n  createStyles,\n  Theme,\n  Typography,\n  Link,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport { Link as RouterLink, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { NewPlan, Recipe } from \"helpers/interfaces\";\nimport { getAllRecipes, createPlan } from \"services/api\";\n\nconst styles = (theme: Theme) => createStyles({\n  formRow: {\n    marginBottom: 25,\n  },\n  unconfirmed_icon: {\n    fontSize: \"1.125rem\",\n    marginLeft: theme.spacing()\n  }\n});\n\ninterface CreatePlanProps extends WithStyles<typeof styles>, RouteComponentProps { }\n\nconst CreatePlan = ({ classes, history }: CreatePlanProps) => {\n  const [recipes, setRecipes] = useState([] as Recipe[]);\n  const [comment, setComment] = useState('');\n  const [recipesChecked, setRecipesChecked] = useState([] as number[]);\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      const recipes = await getAllRecipes();\n      setRecipes(recipes);\n    }\n    getRecipes();\n  }, []);\n\n  const submitHandler = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const plan: NewPlan = {\n      comment,\n      recipes: recipesChecked\n    };\n\n    const result = await createPlan(plan);\n    if (!isNaN(result)) {\n      alert(\"Plan gespeichert!\");\n      history.push(`weekplan`);\n    }\n  };\n\n  const handleCheckboxChange = (recipe: Recipe) => (\n    event: ChangeEvent<HTMLInputElement>\n  ) => {\n    if (event.target.checked) {\n      setRecipesChecked([...recipesChecked, recipe.id]);\n    } else {\n      setRecipesChecked(recipesChecked.filter((recipeId) => recipeId !== recipe.id))\n    }\n  };\n\n  return (\n    <form noValidate onSubmit={submitHandler}>\n      <Typography gutterBottom variant=\"h5\">\n        Neuer Wochenplan\n      </Typography>\n      <TextField\n        className={classes.formRow}\n        id=\"comment\"\n        label=\"Kommentar (optional)\"\n        fullWidth\n        value={comment}\n        onChange={(event) => setComment(event.target.value)}\n      />\n      <div className={classes.formRow}>\n        {recipes.map(recipe => (\n          <div key={recipe.id}>\n            <Checkbox\n              checked={recipesChecked.includes(recipe.id)}\n              onChange={handleCheckboxChange(recipe)}\n            />\n            <Link\n              component={RouterLink}\n              to={`/recipe/${recipe.id}`}\n              color=\"secondary\"\n            >\n              {recipe.title}\n            </Link>\n            {!recipe.confirmed &&\n              <span title=\"Noch nicht bestätigt!\">\n                <ErrorOutlineIcon color=\"secondary\" className={classes.unconfirmed_icon} />\n              </span>\n            }\n          </div>\n        ))}\n      </div>\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n        Speichern\n      </Button>\n    </form>\n  );\n};\n\nexport default withStyles(styles)(withRouter(CreatePlan));\n","import React, {useState} from \"react\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {\n    AppBar,\n    createStyles,\n    Container,\n    CssBaseline,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    Theme,\n    Toolbar,\n    Typography,\n    withStyles,\n    WithStyles,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\nimport CreateRecipe from \"modules/recipes/CreateRecipe\";\nimport Login from \"modules/main/Login\";\nimport NavItems from \"modules/main/NavItems\";\nimport RecipesOverview from \"modules/recipes/RecipesOverview\";\nimport ShowRecipe from \"modules/recipes/ShowRecipe\";\nimport ImportRecipe from \"modules/recipes/ImportRecipe\";\nimport PlansOverview from \"modules/plans/PlansOverview\";\nimport CreatePlan from \"modules/plans/CreatePlan\";\nimport {useEffect} from \"react\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {logout} from \"services/api\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: \"flex\",\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: \"0 8px\",\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: \"none\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: \"hidden\",\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: \"100vh\",\n        overflow: \"auto\",\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n});\n\ninterface AppProps extends WithStyles<typeof styles> {}\n\nconst App = ({classes}: AppProps) => {\n    const [open, setOpen] = useState(true);\n    const [isAuth, setIsAuth] = useState(false);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\") !== null) {\n            setIsAuth(true);\n        }\n    }, []);\n\n    const logoutHandler = async () => {\n        const success = await logout();\n        if (success) {\n            localStorage.clear();\n            window.location.reload();\n            return;\n        }\n        alert(\"Error during logout!\");\n    }\n\n    return (\n        <Router>\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar\n                    position=\"absolute\"\n                    className={clsx(classes.appBar, open && classes.appBarShift)}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"secondary\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setOpen(true)}\n                            className={clsx(\n                                classes.menuButton,\n                                open && classes.menuButtonHidden,\n                            )}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            noWrap\n                            className={classes.title}\n                        >\n                            Rezepte\n                        </Typography>\n                        <RestaurantIcon color=\"secondary\"/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                    }}\n                    open={open}\n                >\n                    <div className={classes.toolbarIcon}>\n                        <IconButton onClick={() => setOpen(false)}>\n                            <ChevronLeftIcon color=\"secondary\"/>\n                        </IconButton>\n                    </div>\n                    <Divider/>\n                    <List>\n                        <NavItems/>\n                        {isAuth &&\n                        <ListItem button onClick={logoutHandler}>\n                            <ListItemIcon>\n                                <ExitToAppIcon color=\"secondary\" />\n                            </ListItemIcon>\n                            <ListItemText primary={\"Logout\"}/>\n                        </ListItem>\n                        }\n                    </List>\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        {isAuth &&\n                        <Switch>\n                            <Route path=\"/create\">\n                                <CreateRecipe/>\n                            </Route>\n                            <Route path=\"/import\">\n                                <ImportRecipe/>\n                            </Route>\n                            <Route path=\"/weekplan\">\n                                <PlansOverview/>\n                            </Route>\n                            <Route path=\"/create-weekplan\">\n                                <CreatePlan/>\n                            </Route>\n                            <Route path=\"/recipe/:id\">\n                                <ShowRecipe/>\n                            </Route>\n                            <Route path=\"/\">\n                                <RecipesOverview/>\n                            </Route>\n                        </Switch>\n                        }\n                        {!isAuth &&\n                        <Route path=\"/\">\n                            <Login/>\n                        </Route>\n                        }\n                    </Container>\n                </main>\n            </div>\n        </Router>\n    );\n};\n\nexport default withStyles(styles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { unstable_createMuiStrictModeTheme as createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst theme = createMuiTheme({\n  palette: { primary: { main: \"#0A4649\" }, secondary: { main: \"#A46B3B\" } },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}